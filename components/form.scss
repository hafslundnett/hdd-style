.hdd-form {
  /************************
   *  Field
   ************************/
  &_field {
    $e: #{&};

    display: block;
    position: relative;
    margin-bottom: 2rem;
    text-align: left;

    &_label {
      @extend .is-p;

      display: inline-block;
      margin-bottom: .2rem;
      font-weight: bold;
    }

    &_title {
      @extend .is-p;
      display: block;
      margin-bottom: 1rem;
    }

    &_error,
    &_info {
      display: none;
      position: absolute;
      margin-top: .2rem;
      font-size: .8rem;

      &.is-active {
        display: block;
      }
    }

    &_error {
      > i {
        margin-right: 5px;
        color: color('signal-red');
      }
    }

    &_info {
      color: color('font-color');
    }

    &.is-line {
      > * {
        &:not(#{$e}_title):not(#{$e}_error) {
          margin-right: 1rem;
          float: left;
        }
      }
    }

    &.is-inline {
      display: inline-block;
    }
  }

  /************************
   *  Input
   ************************/
  &_input {
    $e: #{&};

    display: flex;
    box-sizing: border-box;

    align-items: center;
    padding: $form-input-padding;
    transition: border-color $medium-transition $transition-cubic;
    border: $form-input-border;
    border-radius: $form-input-border-radius;

    background: color('white');

    &:not(.is-invalid):focus-within {
      @extend #{$e}.is-focus;
    }

    &.is-focus {
      border-color: color('primary');

      #{$e}_icon,
      svg,
      i {
        opacity: 1;
        color: color('primary');
      }
    }

    &.is-invalid {
      border-color: color('signal-red');

      i {
        color: color('signal-red');
      }
    }

    &.is-disabled {
      background: color('grey-light');
      cursor: default;
    }

    &_field,
    > input,
    > textarea {
      @extend .is-p;

      width: 100%;
      padding: 0;
      border: none;
      background: transparent;

      @include placeholder() {
        color: color('grey');
      }
    }

    > textarea {
      height: 16px;
      min-height: 16px;
      resize: vertical;
    }

    &_icon,
    > svg,
    > i {
      transition: color $medium-transition $transition-cubic, opacity $medium-transition $transition-cubic;
      opacity: .44;
      color: color('black');
      font-size: font-size(h2);

      &:first-child {
        margin-right: $form-input-icon-margin;
      }

      &:last-child {
        margin-left: $form-input-icon-margin;
      }
    }
  }

  /************************
   *  Checkbox
   ************************/
  &_checkbox {
    $e: #{&};

    display: flex;
    align-items: center;
    margin-bottom: .75rem;
    cursor: pointer;

    // We have to seperate the checkbox marked styling because of the checked state
    %checkbox-mark.is-checked {
      position: relative;
      background-color: color('primary');
      &::before {
        @extend .fal, .fa-check:before;

        top: -2px;
        left: 50%;
        transform: translateX(-50%);

        color: color('white');
        font-size: .75rem;
      }
    }

    &.is-checked {
      #{$e}_mark {
        @extend %checkbox-mark.is-checked;
      }
    }

    &.is-invalid {
      input:checked ~ #{$e}_mark,
      #{$e}_mark {
        border-color: color('signal-red');

        &::before {
          color: color('signal-red');
        }
      }
    }

    // Need to hide the original checkbox
    input {
      display: none;

      &:checked ~ #{$e}_mark {
        @extend %checkbox-mark.is-checked;
      }
    }

    .hdd-badge {
      margin-left: .5rem;
      float: right;
    }

    &_mark {
      display: inline-block;

      width: $form-checkbox-mark-size;
      height: $form-checkbox-mark-size;
      transition: background .3s $transition-cubic;
      border: $form-checkbox-mark-border;
      border-radius: $form-checkbox-mark-border-radius;
      background: color('white');
    }

    &_label {
      flex-grow: 1;
      margin-left: 1rem;
    }
  }

  /************************
   *  Radiobutton
   ************************/
  &_radiobutton {
    $e: #{&};

    display: flex;
    align-items: center;
    margin-bottom: .75rem;
    cursor: pointer;

    %radiobutton-mark.is-checked {
      position: relative;
      background-color: color('primary');
      &:before {
        content: '';
        display: inline-block;
        padding: 5px;
        border: 2px solid color('white');
        border-radius: 14px;
      }
    }

    &.is-checked {
      #{$e}_mark {
        @extend %radiobutton-mark.is-checked;
      }
    }

    input {
      display: none;

      &:checked ~ #{$e}_mark {
        @extend %radiobutton-mark.is-checked;
      }
    }

    &_mark {
      display: inline-block;

      width: $form-radiobutton-mark-size;
      height: $form-radiobutton-mark-size;
      transition: background .3s $transition-cubic;
      border: $form-radiobutton-mark-border;
      border-radius: $form-radiobutton-mark-border-radius;
      background: color('white');
    }

    &_label {
      flex-grow: 1;
      margin-left: 1rem;
    }
  }

  /************************
   *  Select
   ************************/
  &_select {
    $e: #{&};

    display: flex;
    position: relative;
    align-items: center;

    width: 100%;

    transition: border-color $medium-transition $transition-cubic;
    border: $form-select-border;
    border-radius: $form-select-border-radius;

    background: color('white');

    select {
      flex-grow: 1;
      padding: $form-select-padding;

      border: 0;
      background: none;

      -moz-appearance: none;
      -webkit-appearance: none;

      &::-ms-expand {
        display: none;
      }
    }

    &:focus-within {
      @extend #{$e}.is-focus;
    }

    &.is-focus {
      border-color: color('primary');

      select {
        color: color('primary');
      }

      #{$e}_icon,
      > svg,
      > i {
        opacity: 1;
        color: color('primary');
      }
    }

    &.is-invalid {
      border-color: color('signal-red');

      select {
        color: color('signal-red');
      }

      i {
        opacity: 1;
        color: color('signal-red');
      }
    }

    &.is-disabled {
      background: color('grey-light');
      cursor: default;
    }

    &.has-icon {
      select {
        padding-left: calc(#{$form-input-icon-margin} + #{font-size(h2)} + #{$form-input-padding-left});
      }
    }

    &_icon,
    > svg,
    > i {
      position: absolute;
      transition: color $medium-transition $transition-cubic, opacity $medium-transition $transition-cubic;
      opacity: .44;
      color: color('black');
      font-size: font-size(h2);

      &:first-child {
        left: $form-select-icon-margin;
      }

      &:last-child {
        right: $form-select-icon-margin;
      }
    }
  }
}
