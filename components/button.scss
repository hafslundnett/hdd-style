$button-font-size: 1rem;
$button-radius: $border-radius;
$button-border-width: 1px;
$button-padding-top-bottom: 10px;
$button-padding-left-right: 16px;
$button-padding: $button-padding-top-bottom $button-padding-left-right;

$button-with-icon-font-size: 1.5rem;

$icon-button-height: 36px;
$icon-button-font-size: 22px;
$icon-button-height-with-border: $icon-button-height - $button-border-width; // Subtract width of border to match size of buttons without border 
$icon-button-xl-height: 56px;
$icon-button-notification-size: 18px;
$icon-button-notification-radius: 20px;

$extra-border-hover: 1px;

// Subtract width of border to match size of buttons without border 
@function calculate-padding($border-width){
  @return (10px - $border-width) (16px - $border-width);
}

%primary-properties {
  background: var(--hdd-color-primary);
  color: var(--hdd-color-white);
  border: none;

  &[disabled] {
    background: var(--hdd-color-grey);
    color: var(--hdd-color-white);
    cursor: not-allowed;
  }

  // Changes button-text on hover/active/focus
  &:not([disabled]) {
    &:hover {
      border: none;
    }

    &:hover:not(:focus) {
      box-shadow: var(--hdd-shadow-strong);
    }

    &:active {
      background: var(--hdd-color-blue-dark);
      outline: none;
    }
  }
}

%transparent-properties {
  border: none;
  background: transparent;
  color: var(--hdd-color-font-color);

  // Changes button-text on hover/active/focus
  &:not([disabled]) {
    &:focus {
      color: var(--hdd-color-primary);
      outline: none;
      background: transparent;
    }

    &:active,
    &:hover {
      color: var(--hdd-color-primary);
      outline: none;
      box-shadow: none;
      border: none;
    }

    &:hover:not(:active) {
      text-shadow: var(--hdd-shadow-strong);
    }

    &:active {
      transform: scale(0.9, 0.9); // Click-effect
    }
  }
}

%secondary-disabled {
  &[disabled] {
    border-color: var(--hdd-color-grey);
    color: var(--hdd-color-grey);
    cursor: not-allowed;
  }
}

.hdd-button {
  // .is-p is font-properties, defined in typography.
  @extend .is-p;
  // .is-primary is the default for any hdd-button
  @extend .is-primary;

  &.is-primary {
    @extend %primary-properties;

    display: inline-block;
    border-radius: $button-radius;
    padding: $button-padding;
    font-size: $button-font-size;
    letter-spacing: 0.5px;

    min-width: 90px;
    position: relative;
    cursor: pointer;
    outline-offset: -1px;
  }

  &.is-secondary {
    border: $button-border-width solid var(--hdd-color-primary);
    padding: calculate-padding($button-border-width);
    background: transparent;
    color: var(--hdd-color-primary);

    @extend %secondary-disabled;

    // Changes button-text on hover/active/focus
    &:not([disabled]) {
      &:hover {
        box-shadow: var(--hdd-shadow-medium);
        border: $button-border-width + $extra-border-hover solid var(--hdd-color-primary); // 
        padding: calculate-padding($button-border-width + $extra-border-hover);
      }

      &:active {
        background: var(--hdd-color-blue-dark);
        color: var(--hdd-color-white);
      }
    }

    // Changes spinner-color on hover/active/focus
    &.is-loading::after {
      color: var(--hdd-color-primary) !important;
    }
    
    &:active {
      &.is-loading::after {
        color: var(--hdd-color-white) !important;
      }
    }
  }

  // When button with text has icon
  &.has-icon {
    display: inline-flex;
    align-items: center;
    justify-content: space-between;
    padding-left: calc(1rem + #{$button-with-icon-font-size} + var(--hdd-spacing-1)); // 1rem padding, 1.5rem width of icon, spacing between icon and text
    
    i {
      position: absolute;
      left: $button-padding-left-right;
      font-size: $button-with-icon-font-size;
    }

    &:not([disabled]) {
      &:hover {
        &.is-secondary {
          padding-left: calc(1rem + #{$button-with-icon-font-size} + var(--hdd-spacing-1) - #{$extra-border-hover}); // Subtract size of extra hover-border

          i {
            left: $button-padding-left-right - $extra-border-hover; // Subtract size of extra hover-border
          }
        }
      }
    }

    &.is-transparent {
      @extend %transparent-properties;
      @extend %secondary-disabled;
    }
  }

  // When button is loading
  &.is-loading {
    // Adds icon from font awesome to content
    @extend .fa-spinner-third;
    // .fal is icon-properties
    @extend .fal;
    // .is-p is font-properties, defined in typography.
    @extend .is-p;

    color: transparent !important;
    font-size: $button-font-size; 

    &::after {
      // Should find a better solution
      // @extend .fa-spinner-third, ::before; <---  this does not work in mdm-ui
      font-family: "Font Awesome 5 Pro";
      font-weight: 300;
      content: "\F3F4"; // fa-spinner-third

      @include animation(spinner, 0.5s, infinite, linear);
      // .fal is icon-properties
      @extend .fal;

      position: absolute !important;
      top: calc(50% - (1em / 2));
      left: calc(50% - (1em / 2));

      color: var(--hdd-color-white);
    }
  }

  // Buttons with icons only
  &-icon {
    border: $button-border-width solid var(--hdd-color-primary);
    color: var(--hdd-color-primary);
    border-radius: $button-radius;
    background: transparent;
    height: $icon-button-height-with-border; 
    width: $icon-button-height-with-border; 
    font-size: $icon-button-font-size;
    cursor: pointer;
    padding: 0;
    outline-offset: -1px;

    @extend %secondary-disabled;

    // Changes button-text on hover/active/focus
    &:not([disabled]) {
      &:active {
        background: var(--hdd-color-primary);
        color: var(--hdd-color-white);
        outline: none;
      }

      &:hover {
        box-shadow: var(--hdd-shadow-medium);
        border: $button-border-width + $extra-border-hover solid var(--hdd-color-primary); 
      }
    }

    &.is-transparent {
      @extend %transparent-properties;

      height: $icon-button-height; 
    }

    &.is-xl {
      @extend %primary-properties;
      overflow: visible;
      height: $icon-button-xl-height; 
      width: $icon-button-xl-height;
      font-size: 0.5625rem;
      position: relative;

      i {
        font-size: 24px;
      }

      .notification {
        position: absolute;
        top: calc(#{$icon-button-notification-size}/-3);
        right: calc(#{$icon-button-notification-size}/-3);
        width: $icon-button-notification-size;
        height: $icon-button-notification-size;
        padding: 0;
        border-radius: $icon-button-notification-radius;

        font-family: Helvetica Neue;
        font-size: 0.75rem;
        font-weight: bold;
        line-height: 1;
        display: flex;
        align-items: center;
        justify-content: center;

        background: var(--hdd-color-danger);
        color: var(--hdd-color-contrast-danger);
      }
    }

    &.is-no-padding {
      height: unset;
      width: unset;
    }
    
    &[disabled] {
      border-color: var(--hdd-color-grey);
      color: var(--hdd-color-grey);
      cursor: not-allowed;
      
      .notification {
        background-color: var(--hdd-color-grey-medium);
        color: var(--hdd-color-white);
      }
    }
  }
}

