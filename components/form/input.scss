$form-input-padding: $form-input-padding-left 0.9rem;
$form-input-border-radius: $border-radius;
$form-input-border: 1px solid var(--hdd-color-grey);

.hdd-form_input {
  // Variable containing '&' to jump to current parent inside a child class.
  $this: &;

  display: flex;
  box-sizing: border-box;

  align-items: center;
  padding: $form-input-padding;
  transition: border-color $medium-transition $transition-cubic;
  border: $form-input-border;
  border-radius: $form-input-border-radius;

  background: var(--hdd-color-white);

  &:not(.is-invalid):focus-within {
    @extend .hdd-form_input, .is-focus;
  }

  &.is-focus {
    border-color: var(--hdd-color-primary);

    #{$this}_icon,
    svg,
    i {
      opacity: 1;
      color: var(--hdd-color-primary);
    }
  }

  &.is-invalid {
    border-color: var(--hdd-color-signal-red);

    i {
      color: var(--hdd-color-signal-red);
    }
  }

  &.is-disabled {
    background: var(--hdd-color-grey-light);
    cursor: default;
  }

  &_field,
  > input,
  > textarea {
    @include standard-text;

    width: 100%;
    padding: 0;
    border: none;
    background: transparent;

    @include placeholder() {
      color: var(--hdd-color-grey);
    }
  }

  > textarea {
    height: 16px;
    min-height: 16px;
    resize: vertical;
  }

  &_icon,
  > svg,
  > i {
    transition: color $medium-transition $transition-cubic, opacity $medium-transition $transition-cubic;
    opacity: 0.44;
    color: var(--hdd-color-black);
    font-size: font-size(h2);

    &:first-child {
      margin-right: $form-input-icon-margin;
    }

    &:last-child {
      margin-left: $form-input-icon-margin;
    }
  }
}
